{"version":3,"sources":["components/CountryPicker/CountryPicker.module.css","components/Cards/Cards.module.css","components/Cards/Cards.jsx","components/Chart/Chart.jsx","api/index.js","components/CountryPicker/CountryPicker.jsx","images/covid-19.png","App.js","index.js","App.module.css","components/Chart/Chart.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","Chart","barChart","labels","datasets","backgroundColor","borderColor","borderWidth","hoverOffset","key","host","options","method","url","params","name","headers","fetchData","country","a","axios","request","critical","console","log","countryList","countries","map","CountryPicker","handleCountryChange","useState","fetchedCountries","setFetchedCountries","useEffect","fetchCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","value","i","App","state","setState","this","src","image","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3980a47.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\nimport styles from \"./Cards.module.css\";\n\nfunction Cards({ data: { confirmed, recovered, deaths, lastUpdate } }) {\n  if (!confirmed) {\n    return \"Loading...\";\n  }\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(styles.card, styles.infected)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp start={0} end={confirmed} duration={2} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of active cases of COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(styles.card, styles.recovered)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Recovered\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp start={0} end={recovered} duration={2} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of recoveries from COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid\n          item\n          component={Card}\n          xs={12}\n          md={3}\n          className={cx(styles.card, styles.deaths)}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant=\"h5\">\n              <CountUp start={0} end={deaths} duration={2} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\">\n              Number of deaths caused by COVID-19\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Cards;\n","import React from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nfunction Chart({ data: { confirmed, recovered, deaths } }) {\n  const barChart = confirmed ? (\n    <Pie\n      data={{\n        labels: [\"Confirmed\", \"Recovered\", \"Deaths\"],\n        datasets: [\n          {\n            data: [confirmed, recovered, deaths],\n            backgroundColor: [\n              \"rgba(0,0,255,0.5)\",\n              \"rgba(0,255,0,0.5)\",\n              \"rgba(255,0,0,0.5)\",\n            ],\n            borderColor: [\"rgb(0,0,255)\", \"rgb(0,255,0)\", \"rgb(255,0,0)\"],\n            borderWidth: 1,\n            hoverOffset: 5,\n          },\n        ],\n      }}\n    />\n  ) : null;\n\n  return <div className={styles.container}>{barChart}</div>;\n}\n\nexport default Chart;\n","import axios from \"axios\";\n\nconst key = \"7fee4957c5msh65c32fabd477d63p1b134bjsn9cf282802c99\",\n  host = \"covid-19-data.p.rapidapi.com\";\n\nconst options = {\n  method: \"GET\",\n  url: \"https://covid-19-data.p.rapidapi.com/country/\",\n  params: { name: \"India\" },\n  headers: {\n    \"x-rapidapi-key\": key,\n    \"x-rapidapi-host\": host,\n  },\n};\n\nexport const fetchData = async (country) => {\n  if (country) {\n    options.params.name = country;\n  }\n\n  try {\n    const {\n      data: {\n        0: { country, confirmed, critical, deaths, recovered, lastUpdate },\n      },\n    } = await axios.request(options);\n    return { country, confirmed, critical, deaths, recovered, lastUpdate };\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst countryList = {\n  method: \"GET\",\n  url: \"https://covid-19-data.p.rapidapi.com/help/countries\",\n  headers: {\n    \"x-rapidapi-key\": key,\n    \"x-rapidapi-host\": host,\n  },\n};\n\nexport const countries = async () => {\n  try {\n    const { data } = await axios.request(countryList);\n    return data.map((country) => country.name);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\nimport styles from \"./CountryPicker.module.css\";\nimport { countries } from \"../../api\";\n\nfunction CountryPicker({ handleCountryChange }) {\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchCountries = async () => {\n      setFetchedCountries(await countries());\n    };\n\n    fetchCountries();\n  }, [setFetchedCountries]);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect\n        defaultValue=\"\"\n        onChange={(e) => handleCountryChange(e.target.value)}\n      >\n        <option value=\"India\">India</option>\n        {fetchedCountries.map((country, i) => (\n          <option key={i} value={country}>\n            {country}\n          </option>\n        ))}\n      </NativeSelect>\n    </FormControl>\n  );\n}\n\nexport default CountryPicker;\n","export default __webpack_public_path__ + \"static/media/covid-19.0bf3092e.png\";","import React from \"react\";\nimport Cards from \"./components/Cards/Cards\";\nimport Chart from \"./components/Chart/Chart\";\nimport CountryPicker from \"./components/CountryPicker/CountryPicker\";\nimport styles from \"./App.module.css\";\nimport { fetchData } from \"./api\";\nimport image from \"./images/covid-19.png\";\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: \"\",\n  };\n\n  async componentDidMount() {\n    const data = await fetchData();\n\n    this.setState({ data });\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n\n    this.setState({ data: data, country: country });\n  };\n\n  render() {\n    const { data } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <img src={image} alt=\"Covid 19 Corona Virus\" className={styles.image} />\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};"],"sourceRoot":""}